import{useMemo as r,useRef as o,useCallback as e,useEffect as n,useState as t}from"react";const p=()=>"undefined"!=typeof window&&"EyeDropper"in window,s=()=>{let r="Unsupported browser.";return r="Unsupported browser: no EyeDropper in Window. Check https://developer.mozilla.org/en-US/docs/Web/API/EyeDropper_API.",Promise.reject(new Error("Unsupported browser: no EyeDropper in Window. Check https://developer.mozilla.org/en-US/docs/Web/API/EyeDropper_API."))},i=()=>{const r=o(),[s,i]=t(!1);n(()=>(r.current=!0,i(p()),()=>{r.current=!1}),[]);const c=e(()=>s,[s]);return[r,c]},c=r=>{const o=(r=>p()&&new EyeDropper(r))(r);var e;return(e=o)?EyeDropper.prototype.open.bind(e):s},d=t=>{const p=r(()=>c(t),[t]),[s,d]=i(),u=o(),l=e(()=>{void 0!==u.current&&u.current.abort()},[u]),a=e(function(r){void 0===r&&(r={});try{l();const{signal:o,...e}=r,n=new AbortController;u.current=n;const t=void 0!==o?(r=>{const o=new AbortController,e=()=>{o.abort();for(const o of r)o.removeEventListener("abort",e)};for(const o of r){if(o.aborted){e();break}o.addEventListener("abort",e)}return o.signal})([o,n.signal]):n.signal;return Promise.resolve(function(r,o){try{var n=Promise.resolve(p({...e,signal:t}))}catch(r){return o(r)}return n&&n.then?n.then(void 0,o):n}(0,function(r){throw s.current||(r.canceled=!0),r}))}catch(r){return Promise.reject(r)}},[u,s,l,p]);return n(()=>l,[l]),{open:a,close:l,isSupported:d}};export{d as default};
